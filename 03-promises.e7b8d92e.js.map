{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,QAASF,SAASC,cAAc,iBAChCE,UAAWH,SAASC,cAAc,mBAClCG,IAAKJ,SAASC,cAAc,WAG9BH,EAAKM,IAAIC,iBAAiB,SAM1B,SAAwBC,GACtBA,EAAEC,iBACFC,EAAQC,OAAOX,EAAKC,SAASW,OAC7BC,EAAOF,OAAOX,EAAKI,QAAQQ,OAC3BE,EAASH,OAAOX,EAAKK,UAAUO,OAIjC,SAA2BG,EAAOC,EAAMC,GACtC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAcD,EAAGH,GACdK,KAAKC,GACLC,MAAMC,GACPR,GAASC,C,CARbQ,CAAkBd,EAAOG,EAAMC,E,IATjC,IAAIJ,EAAQ,EACRG,EAAO,EACPC,EAAS,EAmBb,SAASO,GAAUI,SAAEA,EAAUC,MAAAC,IAC7BC,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqBL,QAAeE,M,CAG9D,SAASJ,GAASE,SAAEA,EAAUC,MAAAK,IAC5BH,EAAA9B,GAAS+B,OAAOG,QAAQ,oBAAoBP,QAAeM,M,CAG7D,SAASZ,EAAcM,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEV,EAAUC,MAAAO,IAEpBG,EAAO,C,SAAEX,EAAUC,MAAAO,GAAQ,GACzBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css'\n\nconst refs = {\n  inpDelay: document.querySelector('[name = delay]'),\n  inpStep: document.querySelector('[name = step]'),\n  inpAmount: document.querySelector('[name = amount]'),\n  btn: document.querySelector('button'),\n}\n\nrefs.btn.addEventListener('click', collectingData);\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\n\nfunction collectingData(e) {\n  e.preventDefault();\n  delay = Number(refs.inpDelay.value);\n  step = Number(refs.inpStep.value);\n  amount = Number(refs.inpAmount.value);\n  createAllPromises(delay, step, amount);\n}\n\nfunction createAllPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(onResolve)\n      .catch(onReject);\n      delay += step;\n  }\n};\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }}, delay)\n    \n  })\n};\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","inpDelay","document","querySelector","inpStep","inpAmount","btn","addEventListener","e","preventDefault","$47d4ff9957288465$var$delay","Number","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","delay1","step1","amount1","i","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$onResolve","catch","$47d4ff9957288465$var$onReject","$47d4ff9957288465$var$createAllPromises","position","delay","delay2","$parcel$interopDefault","Notify","success","delay3","failure","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.e7b8d92e.js.map"}